<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Drag.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>